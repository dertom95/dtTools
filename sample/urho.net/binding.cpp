/*block:main|file:custombinding.cpp*/ // Autogenerated, do not edit /*name:name*/BindingName/*endname*/
#include "AllUrho.h"
#include "interop.h"
using namespace Urho3D;
extern "C" {


/*block:rip*/
/*name:type|enum:int,ctype*/int/*endname*/ intValue=0;
/*name:type|enum:float,ctype*/float/*endname*/ floatValue=0.5f;
/*name:type|enum:bool,ctype*/bool/*endname*/ boolValue=true;
/*name:type|enum:string,ctype*/const char* /*endname*/ stringValue="";
/*name:type|enum:short,ctype*/short/*endname*/ shortValue=1;
/*name:type|enum:void,ctype*/void/*endname*/* voidValue;
/*name:type|enum:uint,ctype*/unsigned int/*endname*/ uintValue;
/*name:type|enum:s_char_ptr,ctype*/signed char * /*endname*/ s_charPtrValue;

DllExport const char *
UrhoObject_GetCategory (Urho3D::Object *_target)
{
	return /*name:map|map:returntypePre,string*/stringdup((/*endname*/_target->GetCategory ()/*name:map|map:returntypePost,string*/).CString ())/*endname*/;
}
/*endblock:rip*/



/*block:class*/
DllExport int
/*name:name|required|post:_GetType*/Audio_GetType/*endname*/ (/*name:name|store:name2*/Audio/*endname*/ *_target)
{
	return (_target->GetType ()).Value ();
}


DllExport const char *
/*name:name|post:_GetTypeName*/Audio_GetTypeName/*endname*/ (/*name:name*/Audio/*endname*/ *_target)
{
	return stringdup((_target->GetTypeName ()).CString ());
}


DllExport int
/*name:name|post:_GetTypeStatic*/Audio_GetTypeStatic/*endname*/ ()
{
	return (/*name:name*/Audio/*endname*/::GetTypeStatic ()).Value ();
}


DllExport const char *
/*name:name|post:_GetTypeNameStatic*/Audio_GetTypeNameStatic/*endname*/ ()
{
	return stringdup((/*name:name*/Audio/*endname*/::GetTypeNameStatic ()).CString ());
}


DllExport void *
/*name:name|echo:%s_%s,@name,@name2*/Audio_Audio/*endname*/ (Urho3D::Context * context)
{
	return WeakPtr</*name:name*/Audio/*endname*/>(new /*name:name*/Audio/*endname*/(context));
}


/*block:method*/DllExport /*name:returnType|enum:int,ctype*/int/*endname*/
/*name:name|required|echo:%s_%s,@class.name,@*/Audio_SetMode/*endname*/ (/*name:class.name*/Audio/*endname*/ *_target/*block:params*//*name:type|enum:ctype|required|pre:,*/int/*endname*/ /*name:name|required*/bufferLengthMSec/*endname*//*endblock:params*//*block:rip*/, int mixRate, /*name:rip|enum:bool,ctype*/bool/*endname*/ stereo, bool interpolation/*endblock:rip*/)
{
	/*name:if|auto|if:@returnType!='void',@default,*/return/*endname*/ /*name:wrap|auto|getmap:returntypePre,@returnType*//*endname*/_target->/*name:name*/SetMode/*endname*/(
		/*block:params|ifset:0,type,string*/ /*name:name|echo:Urho3D::String(%s),@|post_n_blast:,*/Urho3D::String(bufferLengthMSec), mixRate, stereo, interpolation/*endname*/ /*endblock:params*/
		/*block:params|else:0*/ /*name:name|post_n_blast:,*/bufferLengthMSec, mixRate, stereo, interpolation/*endname*/ /*endblock:params*/
		/*name:wrap|auto|getmap:returntypePost,@returnType*//*endname*/		
	);
	// 1st
}
/*endblock:method*/

/*block:rip*/

DllExport int
Audio_Play (Urho3D::Audio *_target)
{
	return _target->Play ();
}


DllExport void
Audio_Stop (Urho3D::Audio *_target)
{
	_target->Stop ();
}


DllExport void
Audio_SetMasterGain (Urho3D::Audio *_target, const char * type, float gain)
{
	_target->SetMasterGain (Urho3D::String(type), gain);
}


DllExport void
Audio_PauseSoundType (Urho3D::Audio *_target, const char * type)
{
	_target->PauseSoundType (Urho3D::String(type));
}


DllExport void
Audio_ResumeSoundType (Urho3D::Audio *_target, const char * type)
{
	_target->ResumeSoundType (Urho3D::String(type));
}


DllExport void
Audio_ResumeAll (Urho3D::Audio *_target)
{
	_target->ResumeAll ();
}


DllExport void
Audio_SetListener (Urho3D::Audio *_target, Urho3D::SoundListener * listener)
{
	_target->SetListener (listener);
}


DllExport void
Audio_StopSound (Urho3D::Audio *_target, Urho3D::Sound * sound)
{
	_target->StopSound (sound);
}


DllExport unsigned int
Audio_GetSampleSize (Urho3D::Audio *_target)
{
	return _target->GetSampleSize ();
}


DllExport int
Audio_GetMixRate (Urho3D::Audio *_target)
{
	return _target->GetMixRate ();
}


DllExport int
Audio_GetInterpolation (Urho3D::Audio *_target)
{
	return _target->GetInterpolation ();
}


DllExport int
Audio_IsStereo (Urho3D::Audio *_target)
{
	return _target->IsStereo ();
}


DllExport int
Audio_IsPlaying (Urho3D::Audio *_target)
{
	return _target->IsPlaying ();
}


DllExport int
Audio_IsInitialized (Urho3D::Audio *_target)
{
	return _target->IsInitialized ();
}


DllExport float
Audio_GetMasterGain (Urho3D::Audio *_target, const char * type)
{
	return _target->GetMasterGain (Urho3D::String(type));
}


DllExport int
Audio_IsSoundTypePaused (Urho3D::Audio *_target, const char * type)
{
	return _target->IsSoundTypePaused (Urho3D::String(type));
}


DllExport Urho3D::SoundListener *
Audio_GetListener (Urho3D::Audio *_target)
{
	return _target->GetListener ();
}


DllExport int
Audio_HasMasterGain (Urho3D::Audio *_target, const char * type)
{
	return _target->HasMasterGain (Urho3D::String(type));
}


DllExport void
Audio_AddSoundSource (Urho3D::Audio *_target, Urho3D::SoundSource * soundSource)
{
	_target->AddSoundSource (soundSource);
}


DllExport void
Audio_RemoveSoundSource (Urho3D::Audio *_target, Urho3D::SoundSource * soundSource)
{
	_target->RemoveSoundSource (soundSource);
}


DllExport float
Audio_GetSoundSourceMasterGain (Urho3D::Audio *_target, int typeHash)
{
	return _target->GetSoundSourceMasterGain (Urho3D::StringHash(typeHash));
}


DllExport void
Audio_MixOutput (Urho3D::Audio *_target, void * dest, unsigned int samples)
{
	_target->MixOutput (dest, samples);
}
/*endblock:rip*/
/*endblock:class*/


}
/*endblock:main*/